name: Kuber_cluster_monitoring

on:
  schedule:
    - cron: '*/60 * * * *'
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check for failed pods
        uses: appleboy/ssh-action@v1.1.0
        with:
          proxy_host: ${{ secrets.JUMPHOST_IP }}
          proxy_port: ${{ secrets.JUMPHOST_PORT }}
          proxy_username: ${{ secrets.JUMPHOST_USER }}
          proxy_password: ${{ secrets.JUMPHOST_PASS }}
          host: ${{ secrets.K9S_SERVER_IP }}
          username: ${{ secrets.K9S_SERVER_USER }}
          password: ${{ secrets.K9S_SERVER_PASS }}
          script: |
            kubectl config use-context k8s --kubeconfig ~/.kube/config-k8s
            kubectl --kubeconfig ~/.kube/config-k8s get pods -A > k8s_status.log
            kubectl config use-context k3s --kubeconfig ~/.kube/config-k3s
            kubectl --kubeconfig ~/.kube/config-k3s get pods -A > k3s_status.log
            grep "failed" ~/k3s_status.log ~/k8s_status.log > Monitoring.txt || true
            if [ -s Monitoring.txt ]; then
              echo "failed=true" >> $GITHUB_ENV
              cat Monitoring.txt
            else
              echo "failed=false" >> $GITHUB_ENV
            fi	
      - name: Send message to Slack on Failure
          if: env.failed == 'true'
           run: |
             curl -X POST -H 'Content-type: application/json' --data '{"text":"Failures found in your Kuber Cluster:\n'"$(cat Monitoring.txt)"'"}' ${{ secrets.HOOK }}

       - name: Send message to Slack on Failure	
           if: env.failed == 'false'	   
		   run: |
             curl -X POST -H 'Content-type: application/json' --data '{"text":"No Failures detected in your Kuber Cluster"}' ${{ secrets.HOOK }}
